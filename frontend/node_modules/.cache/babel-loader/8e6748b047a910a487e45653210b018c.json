{"ast":null,"code":"const express = require('express');\nconst clienteController = require('../controllers/clienteController');\nconst {\n  Cliente\n} = require('../models/cliente');\nconst rotaService = require('../services/rotaService');\nconst router = express.Router();\n\n//ROTAS PRA UM CRUD\nrouter.post('/api/clientes', clienteController.store); //cadastrar um novo\nrouter.get('/api/clientes', clienteController.index); // Listar todos os clientes\nrouter.get('/api/clientes/:id', clienteController.show); // Exibir detalhes de um cliente\nrouter.put('/clientes/:id', clienteController.update); // Atualizar informações de um cliente\nrouter.delete('/clientes/:id', clienteController.destroy); // Remover um cliente\n\n// Rota para otimizar rotas de atendimento\nrouter.get('/api/otimizar-rotas', async (req, res) => {\n  try {\n    const clientes = await Cliente.findAll(); // ou qualquer método que você usa para obter a lista de clientes\n    const ordemVisita = rotaService.otimizarRotas(clientes);\n    res.json(ordemVisita);\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      error: 'Erro ao otimizar as rotas.'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","clienteController","Cliente","rotaService","router","Router","post","store","get","index","show","put","update","delete","destroy","req","res","clientes","findAll","ordemVisita","otimizarRotas","json","error","console","status","module","exports"],"sources":["C:/Users/carol/OneDrive/Documentos/Teste/frontend/src/components/ClientList/ClientList.js"],"sourcesContent":["const express = require('express');\r\nconst clienteController = require('../controllers/clienteController');\r\nconst { Cliente } = require('../models/cliente');\r\nconst rotaService = require('../services/rotaService');\r\nconst router = express.Router();\r\n\r\n//ROTAS PRA UM CRUD\r\nrouter.post('/api/clientes', clienteController.store); //cadastrar um novo\r\nrouter.get('/api/clientes', clienteController.index); // Listar todos os clientes\r\nrouter.get('/api/clientes/:id', clienteController.show); // Exibir detalhes de um cliente\r\nrouter.put('/clientes/:id', clienteController.update); // Atualizar informações de um cliente\r\nrouter.delete('/clientes/:id', clienteController.destroy); // Remover um cliente\r\n\r\n\r\n\r\n// Rota para otimizar rotas de atendimento\r\nrouter.get('/api/otimizar-rotas', async (req, res) => {\r\n    try {\r\n      const clientes = await Cliente.findAll(); // ou qualquer método que você usa para obter a lista de clientes\r\n      const ordemVisita = rotaService.otimizarRotas(clientes);\r\n      res.json(ordemVisita);\r\n    } catch (error) {\r\n      console.error(error);\r\n      res.status(500).json({ error: 'Erro ao otimizar as rotas.' });\r\n    }\r\n  });\r\n\r\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AACrE,MAAM;EAAEE;AAAQ,CAAC,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMG,WAAW,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACtD,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAM,CAAC,CAAC;;AAE/B;AACAD,MAAM,CAACE,IAAI,CAAC,eAAe,EAAEL,iBAAiB,CAACM,KAAK,CAAC,CAAC,CAAC;AACvDH,MAAM,CAACI,GAAG,CAAC,eAAe,EAAEP,iBAAiB,CAACQ,KAAK,CAAC,CAAC,CAAC;AACtDL,MAAM,CAACI,GAAG,CAAC,mBAAmB,EAAEP,iBAAiB,CAACS,IAAI,CAAC,CAAC,CAAC;AACzDN,MAAM,CAACO,GAAG,CAAC,eAAe,EAAEV,iBAAiB,CAACW,MAAM,CAAC,CAAC,CAAC;AACvDR,MAAM,CAACS,MAAM,CAAC,eAAe,EAAEZ,iBAAiB,CAACa,OAAO,CAAC,CAAC,CAAC;;AAI3D;AACAV,MAAM,CAACI,GAAG,CAAC,qBAAqB,EAAE,OAAOO,GAAG,EAAEC,GAAG,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAMC,WAAW,GAAGhB,WAAW,CAACiB,aAAa,CAACH,QAAQ,CAAC;IACvDD,GAAG,CAACK,IAAI,CAACF,WAAW,CAAC;EACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBN,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA6B,CAAC,CAAC;EAC/D;AACF,CAAC,CAAC;AAEJG,MAAM,CAACC,OAAO,GAAGtB,MAAM"},"metadata":{},"sourceType":"module"}