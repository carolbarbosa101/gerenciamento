{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carol\\\\OneDrive\\\\Documentos\\\\Teste\\\\frontend\\\\src\\\\components\\\\ModalRote\\\\ModalRote.js\";\nimport React from 'react';\nimport Modal from 'react-modal'; // Importando o componente Modal do pacote react-modal\nimport ButtonRote from '../ButtonRote/ButtonRote'; // Importando o componente ButtonRote\nimport ButtonClose from '../ButtonClose/ButtonClose'; // Importando o componente ButtonClose\n\n// Função que representa o componente ModalRote\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalRote = ({\n  isOpen,\n  onRequestClose,\n  clientesNaRota\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen // Propriedade que controla se o modal ta aberto ou fechado\n    ,\n    onRequestClose: onRequestClose // Função chamada quando o user tentar fechar o modal\n    ,\n    contentLabel: \"Otimizar Rotas\" // acessibilidade\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Otimizar Rotas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), clientesNaRota.length > 0 ?\n    /*#__PURE__*/\n    // Se tiver clientes na rota, exibe a lista\n    _jsxDEV(\"ul\", {\n      children: clientesNaRota.map((cliente, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: cliente.nome\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Se não tiver clientes, exibe uma mensagem\n    _jsxDEV(\"p\", {\n      children: \"N\\xE3o h\\xE1 clientes para visitar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonClose, {\n      onClick: onRequestClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalRote;\nexport default ModalRote;\nvar _c;\n$RefreshReg$(_c, \"ModalRote\");","map":{"version":3,"names":["React","Modal","ButtonRote","ButtonClose","jsxDEV","_jsxDEV","ModalRote","isOpen","onRequestClose","clientesNaRota","contentLabel","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","cliente","index","nome","onClick","_c","$RefreshReg$"],"sources":["C:/Users/carol/OneDrive/Documentos/Teste/frontend/src/components/ModalRote/ModalRote.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport Modal from 'react-modal'; // Importando o componente Modal do pacote react-modal\r\nimport ButtonRote from '../ButtonRote/ButtonRote'; // Importando o componente ButtonRote\r\nimport ButtonClose from '../ButtonClose/ButtonClose'; // Importando o componente ButtonClose\r\n\r\n\r\n// Função que representa o componente ModalRote\r\nconst ModalRote = ({ isOpen, onRequestClose, clientesNaRota }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen} // Propriedade que controla se o modal ta aberto ou fechado\r\n      onRequestClose={onRequestClose} // Função chamada quando o user tentar fechar o modal\r\n      contentLabel=\"Otimizar Rotas\" // acessibilidade\r\n    >\r\n      <h2>Otimizar Rotas</h2>\r\n      {clientesNaRota.length > 0 ? (\r\n        // Se tiver clientes na rota, exibe a lista\r\n        <ul>\r\n          {clientesNaRota.map((cliente, index) => (\r\n            <li key={index}>{cliente.nome}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        // Se não tiver clientes, exibe uma mensagem\r\n        <p>Não há clientes para visitar.</p>\r\n      )}\r\n\r\n      <ButtonClose onClick={onRequestClose} /> {/* fechar o modal */}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalRote;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;AACjC,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AACnD,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;;AAGtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC;AAAe,CAAC,KAAK;EAChE,oBACEJ,OAAA,CAACJ,KAAK;IACJM,MAAM,EAAEA,MAAO,CAAC;IAAA;IAChBC,cAAc,EAAEA,cAAe,CAAC;IAAA;IAChCE,YAAY,EAAC,gBAAgB,CAAC;IAAA;IAAAC,QAAA,gBAE9BN,OAAA;MAAAM,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBN,cAAc,CAACO,MAAM,GAAG,CAAC;IAAA;IACxB;IACAX,OAAA;MAAAM,QAAA,EACGF,cAAc,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjCd,OAAA;QAAAM,QAAA,EAAiBO,OAAO,CAACE;MAAI,GAApBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;IAAA;IAEL;IACAV,OAAA;MAAAM,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpC,eAEDV,OAAA,CAACF,WAAW;MAACkB,OAAO,EAAEb;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEZ,CAAC;AAACO,EAAA,GAvBIhB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}